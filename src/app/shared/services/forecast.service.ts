import { Inject, Injectable } from '@angular/core';import { catchError, map, Observable } from 'rxjs';import { HttpClient, HttpResponse } from '@angular/common/http';import { SearchService } from './search.service';import { LocalStorageService } from './local-storage.service';import { ConverterService } from './converter.service';import { ErrorsService } from './errors.service';import { Forecast } from '../interfaces/interfaces';@Injectable({  providedIn: 'root',})export class ForecastService {  constructor(    @Inject('BASE_URL') private baseUrl: string,    @Inject('ATOKEN') private atoken: string,    private httpClient: HttpClient,    private searchService: SearchService,    private localStorageService: LocalStorageService,    private converterService: ConverterService,    private errorService: ErrorsService  ) {}  public getWeekForecast(): Observable<Forecast> {    this.searchService.inputValue$.next('');    const location = this.searchService.currentSearchValue$.getValue();    return this.httpClient      .get<Forecast>(        `${this.baseUrl}/v1/forecast.json?key=${this.atoken}&q=${location}&days=7`,        { observe: 'response' }      )      .pipe(        map((response: HttpResponse<any>) => {          this.localStorageService.setLocationToLS();          return {            location: response.body.location,            current: response.body.current,            forecast: response.body.forecast.forecastday,          };        }),        catchError(this.errorService.handleError)      );  }}